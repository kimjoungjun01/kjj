package bitcamp.java93.control;


import java.io.File;
import java.util.ArrayList;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;

import bitcamp.java93.domain.Teacher;
import bitcamp.java93.service.TeacherService;
import bitcamp.java93.util.MultipartFormDataProcessor;


public class TeacherAddControl implements Controller {
  TeacherService teacherService;

  public void setTeacherService(TeacherService teacherService) {
    this.teacherService = teacherService;
  }

  //받는건 req.setCharacterEncoding("UTF-8"); 이건데
  //보내는건 res.setContentType("text/plain;charset=UTF-8"); 이거 
  //물론  PrintWriter out = res.getWriter(); 이거 전에 호출해야한다 
  @Override
  public String service(HttpServletRequest req, HttpServletResponse res) throws Exception {
    Map<String,FileItem> partMap = MultipartFormDataProcessor.parse(req);

    Teacher m = new Teacher();
    m.setName(partMap.get("name").getString("UTF-8"));
    m.setTel(partMap.get("tel").getString("UTF-8"));
    m.setEmail(partMap.get("email").getString("UTF-8"));
    m.setHomepage(partMap.get("homepage").getString("UTF-8"));
    m.setFacebook(partMap.get("facebook").getString("UTF-8"));
    m.setTwitter(partMap.get("twitter").getString("UTF-8"));


    ArrayList<String> photoList = new ArrayList<>();
    for (int i = 1; i <= 3; i++) {
      FileItem fileItem = partMap.get("photo" + i);
      if (fileItem.getSize() > 0) {
        File file = new File(req.getServletContext().getRealPath("/teacher/photo/" + fileItem.getName()));
        fileItem.write(file);
        photoList.add(fileItem.getName());
      }
    }

    m.setPhotoList(photoList);

    teacherService.add(m);

    return "redirect:list.do";

  }
}

